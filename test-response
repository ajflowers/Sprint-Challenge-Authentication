      {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        res: IncomingMessage {
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: true,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            paused: false,
            emitClose: true,
            autoDestroy: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: true,
            decoder: [StringDecoder],
            encoding: 'utf8'
          },
          readable: false,
          _events: [Object: null prototype] {
            end: [Array],
            data: [Array],
            error: [Array],
            close: [Function: bound emit]
          },
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 6,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 67,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          connection: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 6,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 67,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          headers: {
            'x-dns-prefetch-control': 'off',
            'x-frame-options': 'SAMEORIGIN',
            'strict-transport-security': 'max-age=15552000; includeSubDomains',
            'x-download-options': 'noopen',
            'x-content-type-options': 'nosniff',
            'x-xss-protection': '1; mode=block',
            'access-control-allow-origin': '*',
            'content-type': 'application/json; charset=utf-8',
            'content-length': '3',
            etag: 'W/"3-9imuRLez3P7URNNj5ibt9BHsaag"',
            date: 'Fri, 15 Nov 2019 18:38:12 GMT',
            connection: 'close'
          },
          rawHeaders: [
            'X-DNS-Prefetch-Control',
            'off',
            'X-Frame-Options',
            'SAMEORIGIN',
            'Strict-Transport-Security',
            'max-age=15552000; includeSubDomains',
            'X-Download-Options',
            'noopen',
            'X-Content-Type-Options',
            'nosniff',
            'X-XSS-Protection',
            '1; mode=block',
            'Access-Control-Allow-Origin',
            '*',
            'Content-Type',
            'application/json; charset=utf-8',
            'Content-Length',
            '3',
            'ETag',
            'W/"3-9imuRLez3P7URNNj5ibt9BHsaag"',
            'Date',
            'Fri, 15 Nov 2019 18:38:12 GMT',
            'Connection',
            'close'
          ],
          trailers: {},
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 201,
          statusMessage: 'Created',
          client: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 6,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(asyncId)]: 67,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _consuming: false,
          _dumped: false,
          req: ClientRequest {
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            outputData: [],
            outputSize: 0,
            writable: true,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 44,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            socket: [Socket],
            connection: [Socket],
            _header: 'POST /api/auth/register HTTP/1.1\r\n' +
              'Host: 127.0.0.1:40127\r\n' +
              'Accept-Encoding: gzip, deflate\r\n' +
              'User-Agent: node-superagent/3.8.3\r\n' +
              'Content-Type: application/json\r\n' +
              'Content-Length: 44\r\n' +
              'Connection: close\r\n' +
              '\r\n',
            _onPendingData: [Function: noopPendingOutput],
            agent: [Agent],
            socketPath: undefined,
            method: 'POST',
            path: '/api/auth/register',
            _ended: true,
            res: [Circular],
            aborted: false,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            [Symbol(kNeedDrain)]: false,
            [Symbol(isCorked)]: false,
            [Symbol(kOutHeaders)]: [Object: null prototype]
          },
          text: '[1]'
        },
        request: Test {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          _agent: false,
          _formData: null,
          method: 'POST',
          url: 'http://127.0.0.1:40127/api/auth/register',
          _header: {
            'user-agent': 'node-superagent/3.8.3',
            'content-type': 'application/json'
          },
          header: {
            'User-Agent': 'node-superagent/3.8.3',
            'Content-Type': 'application/json'
          },
          writable: true,
          _redirects: 0,
          _maxRedirects: 0,
          cookies: '',
          qs: {},
          _query: [],
          qsRaw: [],
          _redirectList: [],
          _streamRequest: false,
          _buffer: true,
          app: Server {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 64
          },
          _asserts: [],
          _server: Server {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 64
          },
          _data: { username: 'jest1', password: 'jesting123' },
          req: ClientRequest {
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            outputData: [],
            outputSize: 0,
            writable: true,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 44,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            socket: [Socket],
            connection: [Socket],
            _header: 'POST /api/auth/register HTTP/1.1\r\n' +
              'Host: 127.0.0.1:40127\r\n' +
              'Accept-Encoding: gzip, deflate\r\n' +
              'User-Agent: node-superagent/3.8.3\r\n' +
              'Content-Type: application/json\r\n' +
              'Content-Length: 44\r\n' +
              'Connection: close\r\n' +
              '\r\n',
            _onPendingData: [Function: noopPendingOutput],
            agent: [Agent],
            socketPath: undefined,
            method: 'POST',
            path: '/api/auth/register',
            _ended: true,
            res: [IncomingMessage],
            aborted: false,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            [Symbol(kNeedDrain)]: false,
            [Symbol(isCorked)]: false,
            [Symbol(kOutHeaders)]: [Object: null prototype]
          },
          protocol: 'http:',
          host: '127.0.0.1:40127',
          _endCalled: true,
          _callback: [Function],
          _fullfilledPromise: Promise { [Circular] },
          res: IncomingMessage {
            _readableState: [ReadableState],
            readable: false,
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            connection: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            headers: [Object],
            rawHeaders: [Array],
            trailers: {},
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 201,
            statusMessage: 'Created',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [ClientRequest],
            text: '[1]'
          },
          response: [Circular],
          called: true
        },
        req: ClientRequest {
          _events: [Object: null prototype] {
            drain: [Function],
            error: [Function],
            prefinish: [Function: requestOnPrefinish]
          },
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: 44,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 6,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 67,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          connection: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 6,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: false,
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 67,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _header: 'POST /api/auth/register HTTP/1.1\r\n' +
            'Host: 127.0.0.1:40127\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'User-Agent: node-superagent/3.8.3\r\n' +
            'Content-Type: application/json\r\n' +
            'Content-Length: 44\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _onPendingData: [Function: noopPendingOutput],
          agent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 1,
            _maxListeners: undefined,
            defaultPort: 80,
            protocol: 'http:',
            options: [Object],
            requests: {},
            sockets: [Object],
            freeSockets: {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256
          },
          socketPath: undefined,
          method: 'POST',
          path: '/api/auth/register',
          _ended: true,
          res: IncomingMessage {
            _readableState: [ReadableState],
            readable: false,
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            connection: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            headers: [Object],
            rawHeaders: [Array],
            trailers: {},
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 201,
            statusMessage: 'Created',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [Circular],
            text: '[1]'
          },
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          [Symbol(kNeedDrain)]: false,
          [Symbol(isCorked)]: false,
          [Symbol(kOutHeaders)]: [Object: null prototype] {
            host: [Array],
            'accept-encoding': [Array],
            'user-agent': [Array],
            'content-type': [Array],
            'content-length': [Array]
          }
        },
        text: '[1]',
        body: [ 1 ],
        files: undefined,
        buffered: true,
        headers: {
          'x-dns-prefetch-control': 'off',
          'x-frame-options': 'SAMEORIGIN',
          'strict-transport-security': 'max-age=15552000; includeSubDomains',
          'x-download-options': 'noopen',
          'x-content-type-options': 'nosniff',
          'x-xss-protection': '1; mode=block',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '3',
          etag: 'W/"3-9imuRLez3P7URNNj5ibt9BHsaag"',
          date: 'Fri, 15 Nov 2019 18:38:12 GMT',
          connection: 'close'
        },
        header: {
          'x-dns-prefetch-control': 'off',
          'x-frame-options': 'SAMEORIGIN',
          'strict-transport-security': 'max-age=15552000; includeSubDomains',
          'x-download-options': 'noopen',
          'x-content-type-options': 'nosniff',
          'x-xss-protection': '1; mode=block',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '3',
          etag: 'W/"3-9imuRLez3P7URNNj5ibt9BHsaag"',
          date: 'Fri, 15 Nov 2019 18:38:12 GMT',
          connection: 'close'
        },
        statusCode: 201,
        status: 201,
        statusType: 2,
        info: false,
        ok: true,
        redirect: false,
        clientError: false,
        serverError: false,
        error: false,
        created: true,
        accepted: false,
        noContent: false,
        badRequest: false,
        unauthorized: false,
        notAcceptable: false,
        forbidden: false,
        notFound: false,
        unprocessableEntity: false,
        type: 'application/json',
        charset: 'utf-8',
        links: {},
        setEncoding: [Function: bound ],
        redirects: []
      }